ARG IMG_BUILDBASE="ankona/cstar-buildbase:latest"
ARG MAIN_STAGE="main"  # pass `add_test` to build the test program /runtest

FROM $IMG_BUILDBASE as main

ARG MPICH_URI="https://www.mpich.org/static/downloads/4.2.2/mpich-4.2.2.tar.gz"
ARG MPI_TGZ_NAME="mpich-4.2.2.tar.gz" 
ARG MPI_TGZ_OUT_DIR="mpich-4.2.2"

ARG SRC_DIR="/install"
ARG INSTALL_BASE_DIR="/opt"
ENV MPIHOME="$INSTALL_BASE_DIR/$MPI_TGZ_OUT_DIR"
ARG MPICH_PROFILE="/etc/profile.d/50-mpich-4.2.2.sh"


RUN mkdir -p $SRC_DIR

WORKDIR "$SRC_DIR"
RUN wget -q "$MPICH_URI" && \
    tar xvf "$MPI_TGZ_NAME" && \
    cd "$MPI_TGZ_OUT_DIR" && \
    ./configure \
        --prefix="$MPIHOME" CC=gcc CXX=g++ FC=gfortran \
        --with-pmi=pmi2 && \
    #  --enable-shared 
    #  --with-pic \
        # --with-slurm \
        # --with-pmix=internal && \
    make -j $(nproc) && make install && cd "$SRC_DIR" && \
    rm "$MPI_TGZ_NAME" && \
    rm -rf "$MPI_TGZ_OUT_DIR"


ENV PATH=$MPIHOME/bin:$PATH
ENV LD_LIBRARY_PATH=$MPIHOME/lib:$LD_LIBRARY_PATH
ENV CPATH=$MPIHOME/include:$CPATH
ENV LIBRARY_PATH=$MPIHOME/lib:$LIBRARY_PATH
ENV LD_RUN_PATH=$MPIHOME/lib:$LD_RUN_PATH

RUN mkdir -p "/etc/profile.d" && \
    echo "export MPIHOME=$MPIHOME" >> $MPICH_PROFILE && \
    echo 'export PATH=$MPIHOME/bin:$PATH' >> $MPICH_PROFILE && \
    echo 'export LD_LIBRARY_PATH=$MPIHOME/lib:$LD_LIBRARY_PATH' >> $MPICH_PROFILE && \
    echo 'export CPATH=$MPIHOME/include:$CPATH' >> $MPICH_PROFILE && \
    echo 'export LIBRARY_PATH=$MPIHOME/lib:$LIBRARY_PATH' >> $MPICH_PROFILE && \
    echo 'export LD_RUN_PATH=$MPIHOME/lib:$LD_RUN_PATH' >> $MPICH_PROFILE


FROM main as add_test

ARG TEST_ENV="/etc/profile.d/99-ring.sh"
ENV RING_URI="https://gist.githubusercontent.com/ankona/42bd3fd28cbeec4da65ed57f0529b8dc/raw/3e0a3b7cac0536a0726a5fb36aceb5db1dba8506/ring.c"

ENV MPI_TEST_HARNESS="/test/ring"
ENV PATH="/test:$PATH"
RUN mkdir -p "/test" && \
    wget -q "$RING_URI" -O "/test/ring.c" && \
    mpicc "/test/ring.c" -o $MPI_TEST_HARNESS && \
    rm "/test/ring.c" && \
    echo "#!/bin/bash" >> "$TEST_ENV" && \
    echo "export MPI_TEST_HARNESS=$MPI_TEST_HARNESS" >> "$TEST_ENV" && \
    printf '#!/bin/bash\nmpirun -n 2 --allow-run-as-root %s\n' "$MPI_TEST_HARNESS" >> "/test/runtest" && \
    chmod +x "$TEST_ENV" && \
    chmod +x "/test/runtest" && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        neovim && \
    rm -rf /var/lib/apt/lists/* && \
    ldconfig


FROM $MAIN_STAGE as final

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

CMD []
ENTRYPOINT ["/entrypoint.sh"]
